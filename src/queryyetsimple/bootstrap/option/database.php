<?php
// [$QueryPHP] A PHP Framework Since 2010.10.03. <Query Yet Simple>
// ©2010-2017 http://queryphp.com All rights reserved.
<<<queryphp
##########################################################
#   ____                          ______  _   _ ______   #
#  /     \       ___  _ __  _   _ | ___ \| | | || ___ \  #
# |   (  ||(_)| / _ \| '__|| | | || |_/ /| |_| || |_/ /  #
#  \____/ |___||  __/| |   | |_| ||  __/ |  _  ||  __/   #
#       \__   | \___ |_|    \__  || |    | | | || |      #
#     Query Yet Simple      __/  |\_|    |_| |_|\_|      #
#                          |___ /  Since 2010.10.03      #
##########################################################
queryphp;

/**
 * 数据库默认配置文件
 *
 * @author Xiangmin Liu<635750556@qq.com>
 * @package $$
 * @since 2016.11.19
 * @version 1.0
 */
return [ 
        
        /**
         * ---------------------------------------------------------------
         * 数据库类型
         * ---------------------------------------------------------------
         *
         * 使用何种数据库来保存数据
         */
        'default' => 'mysql',
        
        /**
         * ---------------------------------------------------------------
         * 数据库元是否缓存
         * ---------------------------------------------------------------
         *
         * 数据库表字段是否进行缓存
         */
        'meta_cache' => true,
        
        /**
         * ---------------------------------------------------------------
         * 数据库地址
         * ---------------------------------------------------------------
         *
         * 指定数据库 host，默认为 localhost
         */
        'host' => env ( 'database_host', 'localhost' ),
        
        /**
         * ---------------------------------------------------------------
         * 数据库用户名
         * ---------------------------------------------------------------
         *
         * 数据库用户名，默认为 root
         */
        'user' => env ( 'database_user', 'root' ),
        
        /**
         * ---------------------------------------------------------------
         * 数据库密码
         * ---------------------------------------------------------------
         *
         * 数据库连接密码
         */
        'password' => env ( 'database_password', '' ),
        
        /**
         * ---------------------------------------------------------------
         * 数据库编码
         * ---------------------------------------------------------------
         *
         * 数据库编码防止乱码
         */
        'char' => 'utf8',
        
        /**
         * ---------------------------------------------------------------
         * 数据库名字
         * ---------------------------------------------------------------
         *
         * 指定当前存储数据的数据库名字
         */
        'name' => env ( 'database_name', '' ),
        
        /**
         * ---------------------------------------------------------------
         * 数据库 SCHEMA
         * ---------------------------------------------------------------
         *
         * 指定数据库 SCHEMA
         */
        'schema' => '',
        
        /**
         * ---------------------------------------------------------------
         * 端口
         * ---------------------------------------------------------------
         *
         * 数据库连接端口
         */
        'port' => env ( 'database_port', 3306 ),
        
        /**
         * ---------------------------------------------------------------
         * 数据库 dsn
         * ---------------------------------------------------------------
         *
         * 解析 mysql://username:password@localhost:3306/dbname
         * 数据库 dsn 具有优先解析权，设置了这个将会覆盖默认的连接参数
         */
        'dsn' => '',
        
        /**
         * ---------------------------------------------------------------
         * 数据库连接参数
         * ---------------------------------------------------------------
         *
         * A key=>value array of driver-specific connection options.
         */
        'params' => [ ],
        
        /**
         * ---------------------------------------------------------------
         * 数据库是否支持长连接
         * ---------------------------------------------------------------
         *
         * 适当的选择可以提高性能
         */
        'persistent' => false,
        
        /**
         * ---------------------------------------------------------------
         * 数据库读写是否分离
         * ---------------------------------------------------------------
         *
         * 数据库是否支持读写分离，读写分离可以提高性能
         * 注意：主从式有效
         */
        'rw_separate' => false,
        
        /**
         * ---------------------------------------------------------------
         * 是否采用分布式
         * ---------------------------------------------------------------
         *
         * 设置 cookie 前缀可以用来解决冲突
         */
        'distributed' => false,
        
        /**
         * ---------------------------------------------------------------
         * 主服务器
         * ---------------------------------------------------------------
         *
         * 分布式服务部署主服务器
         */
        'master' => [ ],
        
        /**
         * ---------------------------------------------------------------
         * 附属服务器
         * ---------------------------------------------------------------
         *
         * 分布式服务部署模式中，附属服务器列表
         */
        'slave' => [ ],
        
        /**
         * ---------------------------------------------------------------
         * 数据库连接配置
         * ---------------------------------------------------------------
         *
         * 在模型或者数据库连接中指定的连接
         * 例如 ['test' => []]
         */
        'connect' => [ ] 
];
